apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: agentguard-ingress
  namespace: agentguard
  labels:
    app: agentguard
    component: ingress
  annotations:
    # NGINX Ingress Controller annotations
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "1000"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-connections: "100"
    
    # CORS configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://watcher.mothership-ai.com,https://agentguard.mothership-ai.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';" always;
    
    # Load balancing
    nginx.ingress.kubernetes.io/upstream-hash-by: "$request_uri"
    nginx.ingress.kubernetes.io/load-balance: "ewma"
    
    # Timeouts
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    
    # Buffer settings
    nginx.ingress.kubernetes.io/proxy-buffer-size: "4k"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "8"
    
    # Gzip compression
    nginx.ingress.kubernetes.io/enable-gzip: "true"
    nginx.ingress.kubernetes.io/gzip-types: "text/plain,text/css,application/json,application/javascript,text/xml,application/xml,application/xml+rss,text/javascript"
    
    # SSL configuration
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.2 TLSv1.3"
    nginx.ingress.kubernetes.io/ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256,ECDHE-RSA-AES128-GCM-SHA256,ECDHE-ECDSA-AES256-GCM-SHA384,ECDHE-RSA-AES256-GCM-SHA384"
    
    # Custom snippets for specific endpoints
    nginx.ingress.kubernetes.io/server-snippet: |
      # Special handling for streaming endpoints
      location /stream-detect {
          proxy_buffering off;
          proxy_cache off;
          proxy_set_header Connection '';
          proxy_http_version 1.1;
          chunked_transfer_encoding off;
          proxy_read_timeout 300s;
      }
      
      # WebSocket support
      location /ws/ {
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_read_timeout 3600s;
          proxy_send_timeout 3600s;
      }
      
      # Metrics endpoint (internal only)
      location /metrics {
          allow 10.0.0.0/8;
          allow 172.16.0.0/12;
          allow 192.168.0.0/16;
          deny all;
      }
spec:
  tls:
  - hosts:
    - watcher.mothership-ai.com
    - agentguard.mothership-ai.com
    - api.agentguard.mothership-ai.com
    secretName: agentguard-tls-cert
  rules:
  - host: watcher.mothership-ai.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: agentguard-nginx
            port:
              number: 80
  - host: agentguard.mothership-ai.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: agentguard-nginx
            port:
              number: 80
  - host: api.agentguard.mothership-ai.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: agentguard-api
            port:
              number: 8000
---
# Certificate for TLS
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: agentguard-tls-cert
  namespace: agentguard
spec:
  secretName: agentguard-tls-cert
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
  - watcher.mothership-ai.com
  - agentguard.mothership-ai.com
  - api.agentguard.mothership-ai.com
---
# Network Policy for security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: agentguard-network-policy
  namespace: agentguard
spec:
  podSelector:
    matchLabels:
      app: agentguard
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow ingress from nginx ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 80
  # Allow internal communication within namespace
  - from:
    - namespaceSelector:
        matchLabels:
          name: agentguard
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 6379
    - protocol: TCP
      port: 5432
    - protocol: TCP
      port: 5000
  # Allow monitoring from prometheus namespace
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 9090
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
  # Allow HTTPS to external APIs (Claude, Wikipedia, etc.)
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow internal communication
  - to:
    - namespaceSelector:
        matchLabels:
          name: agentguard
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 6379
    - protocol: TCP
      port: 5432
    - protocol: TCP
      port: 5000

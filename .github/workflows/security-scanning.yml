name: Security Scanning

# P1-3: Enhanced security with automated vulnerability scanning

on:
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  dependency-scanning:
    name: Dependency Vulnerability Scanning
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install safety pip-audit
      
      - name: Run Safety check
        run: |
          safety check --json --output safety-report.json || true
          safety check || echo "::warning::Safety check found vulnerabilities"
      
      - name: Run pip-audit
        run: |
          pip-audit --format json --output pip-audit-report.json || true
          pip-audit || echo "::warning::pip-audit found vulnerabilities"
      
      - name: Upload Safety report
        uses: actions/upload-artifact@v4
        with:
          name: safety-report
          path: safety-report.json
      
      - name: Upload pip-audit report
        uses: actions/upload-artifact@v4
        with:
          name: pip-audit-report
          path: pip-audit-report.json
  
  container-scanning:
    name: Container Security Scanning
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Build Docker image
        run: |
          docker build -t agentguard:scan -f Dockerfile .
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'agentguard:scan'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
      
      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
      
      - name: Run Trivy for JSON report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'agentguard:scan'
          format: 'json'
          output: 'trivy-report.json'
      
      - name: Upload Trivy JSON report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.json
  
  secret-scanning:
    name: Secret Scanning
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for better detection
      
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}
      
      - name: Run TruffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
  
  code-scanning:
    name: Static Code Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install Bandit
        run: pip install bandit[toml]
      
      - name: Run Bandit security linter
        run: |
          bandit -r src/ -f json -o bandit-report.json || true
          bandit -r src/ || echo "::warning::Bandit found security issues"
      
      - name: Upload Bandit report
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit-report.json
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python, javascript
      
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
  
  license-scanning:
    name: License Compliance Scanning
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install pip-licenses
        run: pip install pip-licenses
      
      - name: Check licenses
        run: |
          pip install -r requirements.txt
          pip-licenses --format=json --output-file=licenses-report.json
          pip-licenses --fail-on="GPL;AGPL"  # Fail on copyleft licenses
      
      - name: Upload license report
        uses: actions/upload-artifact@v4
        with:
          name: licenses-report
          path: licenses-report.json
  
  infrastructure-scanning:
    name: Infrastructure as Code Scanning
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          framework: dockerfile,kubernetes
          output_format: json
          output_file_path: checkov-report.json
      
      - name: Upload Checkov report
        uses: actions/upload-artifact@v4
        with:
          name: checkov-report
          path: checkov-report.json
  
  security-report:
    name: Generate Security Report
    runs-on: ubuntu-latest
    needs: [dependency-scanning, container-scanning, secret-scanning, code-scanning, license-scanning, infrastructure-scanning]
    if: always()
    
    steps:
      - name: Download all reports
        uses: actions/download-artifact@v4
      
      - name: Generate summary
        run: |
          echo "# Security Scan Summary" > security-summary.md
          echo "" >> security-summary.md
          echo "**Date**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")" >> security-summary.md
          echo "**Commit**: ${{ github.sha }}" >> security-summary.md
          echo "" >> security-summary.md
          
          echo "## Scan Results" >> security-summary.md
          echo "" >> security-summary.md
          
          echo "- ✅ Dependency Scanning: Complete" >> security-summary.md
          echo "- ✅ Container Scanning: Complete" >> security-summary.md
          echo "- ✅ Secret Scanning: Complete" >> security-summary.md
          echo "- ✅ Code Analysis: Complete" >> security-summary.md
          echo "- ✅ License Compliance: Complete" >> security-summary.md
          echo "- ✅ Infrastructure Scanning: Complete" >> security-summary.md
          
          cat security-summary.md
      
      - name: Upload summary
        uses: actions/upload-artifact@v4
        with:
          name: security-summary
          path: security-summary.md
      
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('security-summary.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });

